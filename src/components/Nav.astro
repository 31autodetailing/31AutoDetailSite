---
const { company_name } = Astro.props;
---

<nav>
  <a class="company-link" href="/">
    <h1>{company_name}</h1>
  </a>
  <div class="nav-links">
    <a href="/about">ABOUT</a>
    <a href="/contact">CONTACT</a>
    <a href="/services">SERVICES</a>
    <a href="/gallery">GALLERY</a>
    <a href="/quote">GET A QUOTE</a>
  </div>
  <hamburger>
    <input type="checkbox"/>
    <span></span>
    <span></span>
    <span></span>
    <div id="menu">
      <a href="/about"><p>ABOUT</p></a>
      <a href="/contact"><p>CONTACT</p></a>
      <a href="/services"><p>SERVICES</p></a>
      <a href="/gallery"><p>GALLERY</p></a>
      <a href="/quote"><p>GET A QUOTE</p></a>
    </div>
  </hamburger>
</nav>
<style>
  :root {
    --distance-from-top: 50px;
  }
  h1 {
    margin: 0 0 0 1rem;
    padding: 0;
    font-size: 3rem;
    font-family: "Zeyada", cursive;
  }
  .company-link {
    text-decoration: none;
    color: hsla(var(--text-color), 1);
  }
  nav {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    background: linear-gradient(90deg, rgba(9,9,121,1) 0%, rgba(11,17,33,1) 100%);
    position: relative;
  }
  nav .nav-links a, #menu a {
    text-decoration: none;
    color: hsla(var(--link-color), 1);
    margin: 0 1rem;
  }
  nav .nav-links a:hover, #menu a:hover {
    color: hsla(var(--link-hover-color), 1);
  }
  hamburger {
    display: block;
    z-index: 1;
    -webkit-user-select: none;
    user-select: none;
    position: relative;
    margin-right: 25px;
  }
  hamburger input {
    margin: 0;
    width: 2rem;
    height: 2rem;
    position: absolute;
    display: block;
    cursor: pointer;
    opacity: 0; /* hide this */
    z-index: 2; /* and place it over the hamburger */
    -webkit-touch-callout: none;
  }
  hamburger span {
    display: block;
    width: 33px;
    height: 4px;
    margin-bottom: 5px;
    position: relative;
    background: hsla(var(--link-color), 1);
    border-radius: 3px;
    z-index: 1;
    transform-origin: 4px 0px;
    transition: transform 0.5s cubic-bezier(0.77,0.2,0.05,1.0),
                background 0.5s cubic-bezier(0.77,0.2,0.05,1.0),
                opacity 0.55s ease;
  }
  hamburger span:first-child {
    transform-origin: 0% 0%;
  }
  hamburger span:nth-last-child(2) {
    transform-origin: 0% 100%;
  }
  hamburger input:checked ~ span {
    opacity: 1;
    transform: rotate(45deg) translate(-2px, -1px);
    background: hsla(var(--link-color), 1);
  }
  hamburger input:checked ~ span:nth-last-child(3) {
    opacity: 0;
    transform: rotate(0deg) scale(0.2, 0.2);
  }
  hamburger input:checked ~ span:nth-last-child(2) {
    transform: rotate(-45deg) translate(0, -1px);
  }
  hamburger #menu {
    display: flex;
    flex-direction: column;
    position: absolute;
    right: -25px;
    top: var(--distance-from-top);
    max-height: 100vh;
    box-sizing: border-box;
    overflow-y: auto;
    -webkit-font-smoothing: antialiased;
    /* to stop flickering of text in safari */
    transform-origin: 0% 0%;
    transform: translate(100%, 0);
    transition: transform 0.5s cubic-bezier(0.77,0.2,0.05,1.0);
    backdrop-filter: blur(10px);
    background: rgba(0, 0, 0, 0.7);
  }
  hamburger input:checked ~ #menu {
    transform: none;
  }
  hamburger #menu a {
    display: flex;
    justify-content: center;
    width: 100vw;
    margin: 0;
  }
  hamburger #menu p {
    margin: 0;
    padding: 0.4rem 1rem 0.4rem 0;
    font-family: "Spline Sans Mono", monospace;
    font-size: 1.5rem;
    height: 100%;
  }
  hamburger #menu a:hover {
    background: rgba(0, 0, 0, 0.3);
  }

  @media (max-width: 900px) {
    .nav-links {
      display: none;
    }
  }
  @media (min-width: 899px) {
    hamburger {
      display: none;
    }
  }
  @media (max-width: 500px) {
    :root {
      --distance-from-top: 38px;
    }
    h1 {
      font-size: 2rem;
    }
  }
  @media (max-width: 350px) {
    :root {
      --distance-from-top: 32px;
    }
    h1 {
      font-size: 1.5rem;
    }
  }

</style>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const hamburger = document.querySelector("hamburger");
  const hamburgerCheck = document.querySelector("hamburger input") as HTMLInputElement;
  hamburgerCheck.addEventListener("click", (e) => {
    e.stopPropagation();
  })
  window.addEventListener("click", (e) => {
    if (hamburgerCheck.checked && e.target !== hamburgerCheck) {
      hamburgerCheck.checked = false;
    }
  })
})
</script>
